diff -Naur '--exclude=gif_lib.h.orig' giflib.orig/CMakeLists.txt giflib.new/CMakeLists.txt
--- giflib.orig/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ giflib.new/CMakeLists.txt	2022-11-19 07:47:16.152104800 +0100
@@ -0,0 +1,44 @@
+cmake_minimum_required(VERSION 3.0.0 FATAL_ERROR)
+
+project(giflib VERSION 5.2.1 LANGUAGES C)
+
+#
+# Library
+#
+add_library(gif
+            SHARED
+            dgif_lib.c
+			 egif_lib.c
+			 gifalloc.c
+			 gif_err.c
+			 gif_font.c
+			 gif_hash.c
+			 openbsd-reallocarray.c)
+set_target_properties(gif
+  PROPERTIES
+  COMPILE_FLAGS "-Dgif_EXPORTS"
+  VERSION       "${giflib_VERSION}"
+  SOVERSION     "${giflib_VERSION_MAJOR}"
+)
+IF (("${CMAKE_C_COMPILER_ID} x" MATCHES "MSVC") OR MSVC)
+  target_compile_definitions(gif PRIVATE "-DWIN32_LEAN_AND_MEAN -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE")
+ENDIF ()
+
+#
+# Generated export header
+#
+include(GenerateExportHeader)
+generate_export_header(gif
+  BASE_NAME giflib
+  EXPORT_MACRO_NAME giflib_EXPORT
+  EXPORT_FILE_NAME ${CMAKE_CURRENT_BINARY_DIR}/include/giflib/export.h
+  STATIC_DEFINE giflib_STATIC)
+target_include_directories(gif PUBLIC ${CMAKE_CURRENT_BINARY_DIR}/include)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/include/giflib/export.h DESTINATION include/giflib)
+
+#
+# Library header file
+#
+install(FILES gif_lib.h DESTINATION include)
+ 
+install(TARGETS gif)
diff -Naur '--exclude=gif_lib.h.orig' giflib.orig/gif_font.c giflib.new/gif_font.c
--- giflib.orig/gif_font.c	2019-06-24 09:27:04.000000000 +0200
+++ giflib.new/gif_font.c	2022-11-19 07:47:16.162416600 +0100
@@ -239,7 +239,11 @@
 		      border + LineCount * GIF_FONT_HEIGHT + border - 1, bg);
 	(void)strcpy(dup, (char *)legend);
 	char *lasts;
+#ifdef WIN32
+	cp = strtok_s(dup, "\r\n", &lasts);
+#else
 	cp = strtok_r(dup, "\r\n", &lasts);
+#endif
 	do {
 	    int leadspace = 0;
 
@@ -248,7 +252,11 @@
 
 	    GifDrawText8x8(Image, x + border + (leadspace * GIF_FONT_WIDTH),
 			   y + border + (GIF_FONT_HEIGHT * i++), cp, fg);
+#ifdef WIN32
+	    cp = strtok_s(NULL, "\r\n", &lasts);
+#else
 	    cp = strtok_r(NULL, "\r\n", &lasts);
+#endif
 	} while (cp);
 	(void)free((void *)dup);
 
diff -Naur '--exclude=gif_lib.h.orig' giflib.orig/gif_hash.h giflib.new/gif_hash.h
--- giflib.orig/gif_hash.h	2019-06-24 09:27:26.000000000 +0200
+++ giflib.new/gif_hash.h	2022-11-19 07:47:16.171288900 +0100
@@ -9,7 +9,9 @@
 #ifndef _GIF_HASH_H_
 #define _GIF_HASH_H_
 
+#ifndef _WIN32
 #include <unistd.h>
+#endif
 #include <stdint.h>
 
 #define HT_SIZE			8192	   /* 12bits = 4096 or twice as big! */
diff -Naur '--exclude=gif_lib.h.orig' giflib.orig/gif_lib.h giflib.new/gif_lib.h
--- giflib.orig/gif_lib.h	2022-11-19 07:46:01.868817600 +0100
+++ giflib.new/gif_lib.h	2022-11-19 07:49:05.202522100 +0100
@@ -9,6 +9,8 @@
 #ifndef _GIF_LIB_H_
 #define _GIF_LIB_H_ 1
 
+#include <giflib/export.h>
+
 #ifdef __cplusplus
 extern "C" {
 #endif /* __cplusplus */
@@ -125,13 +127,13 @@
 ******************************************************************************/
 
 /* Main entry points */
-GifFileType *EGifOpenFileName(const char *GifFileName,
+giflib_EXPORT GifFileType *EGifOpenFileName(const char *GifFileName,
                               const bool GifTestExistence, int *Error);
-GifFileType *EGifOpenFileHandle(const int GifFileHandle, int *Error);
-GifFileType *EGifOpen(void *userPtr, OutputFunc writeFunc, int *Error);
-int EGifSpew(GifFileType * GifFile);
-const char *EGifGetGifVersion(GifFileType *GifFile); /* new in 5.x */
-int EGifCloseFile(GifFileType *GifFile, int *ErrorCode);
+giflib_EXPORT GifFileType *EGifOpenFileHandle(const int GifFileHandle, int *Error);
+giflib_EXPORT GifFileType *EGifOpen(void *userPtr, OutputFunc writeFunc, int *Error);
+giflib_EXPORT int EGifSpew(GifFileType * GifFile);
+giflib_EXPORT const char *EGifGetGifVersion(GifFileType *GifFile); /* new in 5.x */
+giflib_EXPORT int EGifCloseFile(GifFileType *GifFile, int *ErrorCode);
 
 #define E_GIF_SUCCEEDED          0
 #define E_GIF_ERR_OPEN_FAILED    1    /* And EGif possible errors. */
@@ -146,31 +148,31 @@
 #define E_GIF_ERR_NOT_WRITEABLE  10
 
 /* These are legacy.  You probably do not want to call them directly */
-int EGifPutScreenDesc(GifFileType *GifFile,
+giflib_EXPORT int EGifPutScreenDesc(GifFileType *GifFile,
                       const int GifWidth, const int GifHeight, 
 		      const int GifColorRes,
                       const int GifBackGround,
                       const ColorMapObject *GifColorMap);
-int EGifPutImageDesc(GifFileType *GifFile, 
+giflib_EXPORT int EGifPutImageDesc(GifFileType *GifFile, 
 		     const int GifLeft, const int GifTop,
                      const int GifWidth, const int GifHeight, 
 		     const bool GifInterlace,
                      const ColorMapObject *GifColorMap);
-void EGifSetGifVersion(GifFileType *GifFile, const bool gif89);
-int EGifPutLine(GifFileType *GifFile, GifPixelType *GifLine,
+giflib_EXPORT void EGifSetGifVersion(GifFileType *GifFile, const bool gif89);
+giflib_EXPORT int EGifPutLine(GifFileType *GifFile, GifPixelType *GifLine,
                 int GifLineLen);
-int EGifPutPixel(GifFileType *GifFile, const GifPixelType GifPixel);
-int EGifPutComment(GifFileType *GifFile, const char *GifComment);
-int EGifPutExtensionLeader(GifFileType *GifFile, const int GifExtCode);
-int EGifPutExtensionBlock(GifFileType *GifFile,
+giflib_EXPORT int EGifPutPixel(GifFileType *GifFile, const GifPixelType GifPixel);
+giflib_EXPORT int EGifPutComment(GifFileType *GifFile, const char *GifComment);
+giflib_EXPORT int EGifPutExtensionLeader(GifFileType *GifFile, const int GifExtCode);
+giflib_EXPORT int EGifPutExtensionBlock(GifFileType *GifFile,
                          const int GifExtLen, const void *GifExtension);
-int EGifPutExtensionTrailer(GifFileType *GifFile);
-int EGifPutExtension(GifFileType *GifFile, const int GifExtCode, 
+giflib_EXPORT int EGifPutExtensionTrailer(GifFileType *GifFile);
+giflib_EXPORT int EGifPutExtension(GifFileType *GifFile, const int GifExtCode, 
 		     const int GifExtLen,
                      const void *GifExtension);
-int EGifPutCode(GifFileType *GifFile, int GifCodeSize,
+giflib_EXPORT int EGifPutCode(GifFileType *GifFile, int GifCodeSize,
                 const GifByteType *GifCodeBlock);
-int EGifPutCodeNext(GifFileType *GifFile,
+giflib_EXPORT int EGifPutCodeNext(GifFileType *GifFile,
                     const GifByteType *GifCodeBlock);
 
 /******************************************************************************
@@ -178,11 +180,11 @@
 ******************************************************************************/
 
 /* Main entry points */
-GifFileType *DGifOpenFileName(const char *GifFileName, int *Error);
-GifFileType *DGifOpenFileHandle(int GifFileHandle, int *Error);
-int DGifSlurp(GifFileType * GifFile);
-GifFileType *DGifOpen(void *userPtr, InputFunc readFunc, int *Error);    /* new one (TVT) */
-    int DGifCloseFile(GifFileType * GifFile, int *ErrorCode);
+giflib_EXPORT GifFileType *DGifOpenFileName(const char *GifFileName, int *Error);
+giflib_EXPORT GifFileType *DGifOpenFileHandle(int GifFileHandle, int *Error);
+giflib_EXPORT int DGifSlurp(GifFileType * GifFile);
+giflib_EXPORT GifFileType *DGifOpen(void *userPtr, InputFunc readFunc, int *Error);    /* new one (TVT) */
+giflib_EXPORT int DGifCloseFile(GifFileType * GifFile, int *ErrorCode);
 
 #define D_GIF_SUCCEEDED          0
 #define D_GIF_ERR_OPEN_FAILED    101    /* And DGif possible errors. */
@@ -200,25 +202,25 @@
 #define D_GIF_ERR_EOF_TOO_SOON   113
 
 /* These are legacy.  You probably do not want to call them directly */
-int DGifGetScreenDesc(GifFileType *GifFile);
-int DGifGetRecordType(GifFileType *GifFile, GifRecordType *GifType);
-int DGifGetImageHeader(GifFileType *GifFile);
-int DGifGetImageDesc(GifFileType *GifFile);
-int DGifGetLine(GifFileType *GifFile, GifPixelType *GifLine, int GifLineLen);
-int DGifGetPixel(GifFileType *GifFile, GifPixelType GifPixel);
-int DGifGetExtension(GifFileType *GifFile, int *GifExtCode,
+giflib_EXPORT int DGifGetScreenDesc(GifFileType *GifFile);
+giflib_EXPORT int DGifGetRecordType(GifFileType *GifFile, GifRecordType *GifType);
+giflib_EXPORT int DGifGetImageHeader(GifFileType *GifFile);
+giflib_EXPORT int DGifGetImageDesc(GifFileType *GifFile);
+giflib_EXPORT int DGifGetLine(GifFileType *GifFile, GifPixelType *GifLine, int GifLineLen);
+giflib_EXPORT int DGifGetPixel(GifFileType *GifFile, GifPixelType GifPixel);
+giflib_EXPORT int DGifGetExtension(GifFileType *GifFile, int *GifExtCode,
                      GifByteType **GifExtension);
-int DGifGetExtensionNext(GifFileType *GifFile, GifByteType **GifExtension);
-int DGifGetCode(GifFileType *GifFile, int *GifCodeSize,
+giflib_EXPORT int DGifGetExtensionNext(GifFileType *GifFile, GifByteType **GifExtension);
+giflib_EXPORT int DGifGetCode(GifFileType *GifFile, int *GifCodeSize,
                 GifByteType **GifCodeBlock);
-int DGifGetCodeNext(GifFileType *GifFile, GifByteType **GifCodeBlock);
-int DGifGetLZCodes(GifFileType *GifFile, int *GifCode);
-const char *DGifGetGifVersion(GifFileType *GifFile);
+giflib_EXPORT int DGifGetCodeNext(GifFileType *GifFile, GifByteType **GifCodeBlock);
+giflib_EXPORT int DGifGetLZCodes(GifFileType *GifFile, int *GifCode);
+giflib_EXPORT const char *DGifGetGifVersion(GifFileType *GifFile);
 
 /******************************************************************************
  Color table quantization (deprecated)
 ******************************************************************************/
-int GifQuantizeBuffer(unsigned int Width, unsigned int Height,
+giflib_EXPORT int GifQuantizeBuffer(unsigned int Width, unsigned int Height,
                    int *ColorMapSize, GifByteType * RedInput,
                    GifByteType * GreenInput, GifByteType * BlueInput,
                    GifByteType * OutputBuffer,
@@ -227,7 +229,7 @@
 /******************************************************************************
  Error handling and reporting.
 ******************************************************************************/
-extern const char *GifErrorString(int ErrorCode);     /* new in 2012 - ESR */
+giflib_EXPORT extern const char *GifErrorString(int ErrorCode);     /* new in 2012 - ESR */
 
 /*****************************************************************************
  Everything below this point is new after version 1.2, supporting `slurp
@@ -238,43 +240,43 @@
  Color map handling from gif_alloc.c
 ******************************************************************************/
 
-extern ColorMapObject *GifMakeMapObject(int ColorCount,
+giflib_EXPORT ColorMapObject *GifMakeMapObject(int ColorCount,
                                      const GifColorType *ColorMap);
-extern void GifFreeMapObject(ColorMapObject *Object);
-extern ColorMapObject *GifUnionColorMap(const ColorMapObject *ColorIn1,
+giflib_EXPORT void GifFreeMapObject(ColorMapObject *Object);
+giflib_EXPORT ColorMapObject *GifUnionColorMap(const ColorMapObject *ColorIn1,
                                      const ColorMapObject *ColorIn2,
                                      GifPixelType ColorTransIn2[]);
-extern int GifBitSize(int n);
+giflib_EXPORT int GifBitSize(int n);
 
 /******************************************************************************
  Support for the in-core structures allocation (slurp mode).              
 ******************************************************************************/
 
-extern void GifApplyTranslation(SavedImage *Image, GifPixelType Translation[]);
-extern int GifAddExtensionBlock(int *ExtensionBlock_Count,
+giflib_EXPORT void GifApplyTranslation(SavedImage *Image, GifPixelType Translation[]);
+giflib_EXPORT int GifAddExtensionBlock(int *ExtensionBlock_Count,
 				ExtensionBlock **ExtensionBlocks, 
 				int Function, 
 				unsigned int Len, unsigned char ExtData[]);
-extern void GifFreeExtensions(int *ExtensionBlock_Count,
+giflib_EXPORT void GifFreeExtensions(int *ExtensionBlock_Count,
 			      ExtensionBlock **ExtensionBlocks);
-extern SavedImage *GifMakeSavedImage(GifFileType *GifFile,
+giflib_EXPORT SavedImage *GifMakeSavedImage(GifFileType *GifFile,
                                   const SavedImage *CopyFrom);
-extern void GifFreeSavedImages(GifFileType *GifFile);
+giflib_EXPORT void GifFreeSavedImages(GifFileType *GifFile);
 
 /******************************************************************************
  5.x functions for GIF89 graphics control blocks
 ******************************************************************************/
 
-int DGifExtensionToGCB(const size_t GifExtensionLength,
+giflib_EXPORT int DGifExtensionToGCB(const size_t GifExtensionLength,
 		       const GifByteType *GifExtension,
 		       GraphicsControlBlock *GCB);
-size_t EGifGCBToExtension(const GraphicsControlBlock *GCB,
+giflib_EXPORT size_t EGifGCBToExtension(const GraphicsControlBlock *GCB,
 		       GifByteType *GifExtension);
 
-int DGifSavedExtensionToGCB(GifFileType *GifFile, 
+giflib_EXPORT int DGifSavedExtensionToGCB(GifFileType *GifFile, 
 			    int ImageIndex, 
 			    GraphicsControlBlock *GCB);
-int EGifGCBToSavedExtension(const GraphicsControlBlock *GCB, 
+giflib_EXPORT int EGifGCBToSavedExtension(const GraphicsControlBlock *GCB, 
 			    GifFileType *GifFile, 
 			    int ImageIndex);
 
@@ -284,21 +286,21 @@
 
 #define GIF_FONT_WIDTH  8
 #define GIF_FONT_HEIGHT 8
-extern const unsigned char GifAsciiTable8x8[][GIF_FONT_WIDTH];
+giflib_EXPORT const unsigned char GifAsciiTable8x8[][GIF_FONT_WIDTH];
 
-extern void GifDrawText8x8(SavedImage *Image,
+giflib_EXPORT void GifDrawText8x8(SavedImage *Image,
                      const int x, const int y,
                      const char *legend, const int color);
 
-extern void GifDrawBox(SavedImage *Image,
+giflib_EXPORT void GifDrawBox(SavedImage *Image,
                     const int x, const int y,
                     const int w, const int d, const int color);
 
-extern void GifDrawRectangle(SavedImage *Image,
+giflib_EXPORT void GifDrawRectangle(SavedImage *Image,
                    const int x, const int y,
                    const int w, const int d, const int color);
 
-extern void GifDrawBoxedText8x8(SavedImage *Image,
+giflib_EXPORT void GifDrawBoxedText8x8(SavedImage *Image,
                           const int x, const int y,
                           const char *legend,
                           const int border, const int bg, const int fg);
