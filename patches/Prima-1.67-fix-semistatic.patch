diff --git a/api/semistatic.c b/api/semistatic.c
index 9962affd..4d60280f 100644
--- a/api/semistatic.c
+++ b/api/semistatic.c
@@ -12,12 +12,18 @@ semistatic_init( semistatic_t * s, void * stack, unsigned int elem_size, unsigne
 	s->stack = s->heap = stack;
 	s->elem_size = elem_size;
 	s->size      = static_size;
+	if (static_size > 0) {
+		bzero(stack, (size_t) (elem_size * static_size));
+	}
 }
 
 int
 semistatic_expand( semistatic_t * s, unsigned int desired_elems )
 {
 	void * n;
+	char * p;
+	size_t prevbytesize = (size_t) (s->elem_size * s->count);
+	size_t newbytesize;
 
 	if ( desired_elems > 0 ) {
 		if ( s-> size >= desired_elems )
@@ -27,14 +33,19 @@ semistatic_expand( semistatic_t * s, unsigned int desired_elems )
 		s-> size *= 2;
 	}
 
+	newbytesize = (size_t) (s->elem_size * s->size);
 	if ( s->stack == s->heap ) {
-		if (( n = malloc(s->elem_size * s->size)) == NULL)
+		if (( n = malloc(newbytesize)) == NULL)
 			goto FAIL;
-		memcpy( n, s->stack, s->elem_size * s->count);
+		memcpy( n, s->stack, prevbytesize);
 	} else {
-		if (( n = realloc(s->heap, s->elem_size * s->size)) == NULL )
+		if (( n = realloc(s->heap, newbytesize)) == NULL )
 			goto FAIL;
 	}
+	if (newbytesize > prevbytesize) {
+		p = (char *) n;
+		bzero(p + prevbytesize, newbytesize - prevbytesize);
+	}
 	s-> heap = n;
 	return 1;
 FAIL:
